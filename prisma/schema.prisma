// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  phone     String?   @unique
  email     String?   @unique
  avatar    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tokens    Token[]
  Product   Product[]
}

model Token {
  id        Int      @id @default(autoincrement())
  payload   String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Product {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  image       String
  name        String
  price       Int
  description String   @db.MediumText

  @@index([userId])
}

// model User {
//   id Int @id @default(autoincrement())
//   username String
//   email String
//   password String
//   createdAt DateTime @default(now())
//   likes Like[]
//   tweets Tweet[]
// }

// model Tweet {
//   id Int @id @default(autoincrement())
//   text String
//   createdAt DateTime @default(now())
//   user User @relation(fields: [userId], references: [id])
//   userId Int
//   likes Like[]

//   @@index([userId])
// }

// model Like {
//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   user User @relation(fields: [userId], references: [id])
//   userId Int
//   tweet Tweet @relation(fields: [tweetId], references: [id])
//   tweetId Int 

//   @@index([userId])
//   @@index([tweetId])
// }
